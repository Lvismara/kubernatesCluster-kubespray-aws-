---
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Create a new EC2 key
      ec2_key:
        name: chaveKube
        region: sa-east-1
      register: ec2_key_result
    - name: Save private key
      copy: content="{{ ec2_key_result.key.private_key }}" dest="./chaveKube.pem" mode=0600
      when: ec2_key_result.changed
    - name: Create the aws master node security group
      ec2_group:
        name: aws-kube-sg
        description: Security Group of the aws master node
        region: sa-east-1
        vpc_id: vpc-2fb2324b
        rules:
          - proto: tcp
            ports:
              - 22
              - 80
              - 443
              - 3000-32767
              - 6443
              - 2379
              - 2380
              - 10255
              - 10250
              - 10251
              - 10252
              - 10256
              - 8443
              - 10050
              - 8080
              - 9000
            cidr_ip: 0.0.0.0/0
      register: ec2_group_result
    - name: Create the RHEL 7.5 VM of the aws master node
      ec2:
        region: sa-east-1
        group_id: '{{ec2_group_result.group_id}}'
        vpc_subnet_id: subnet-0c487e68
        instance_type: t2.small
        key_name: '{{ ec2_key_result.key.name}}'
        image: ami-b0b7e3dc
#          instance_profile_name: kubernetes-master-role
        instance_tags:
          Name: Master-K8s
          kubespray-role: kube-master, etcd
        assign_public_ip: yes
        wait: true
      register: ec2_result
    - name: Allocate a new elastic IP and associate it with the aws master node
      ec2_eip:
        region: sa-east-1
        device_id: '{{ec2_result.instance_ids[0]}}'
      register: ec2_eip_result
    - name: Remove swapfile from /etc/fstab
      mount:
       name: swap
       fstype: swap
       state: absent
    - name: Update the inventory file
      lineinfile:
       path: ./hosts
       insertafter: '^\[kube-master\]$'
       regexp: '^{{ec2_eip_result.public_ip}} ansible_ssh_host=\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$'
       line: '{{ec2_eip_result.public_ip}} ansible_ssh_host={{ec2_eip_result.public_ip}}'
    - name: Stop and disable firewalld
      service:
       name: firewalld
       state: stopped
       enabled: False
      ignore_errors: yes
    - name: Wait for SSH to come up
      wait_for:
        host: '{{ec2_eip_result.public_ip}}'
        port: 22
        state: started
