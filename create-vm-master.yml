---
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Create a new EC2 key
      ec2_key:
        name: chaveLeo
        region: sa-east-1
      register: ec2_key_result
    - name: Save private key
      copy: content="{{ ec2_key_result.key.private_key }}" dest="./chaveLeo.pem" mode=0400
      when: ec2_key_result.changed
    - name: Create the aws master node security group
      ec2_group:
        name: aws-master-sg
        description: Security Group of the aws master node
        region: sa-east-1
        vpc_id: vpc-fd2ce79a
        rules:
          - proto: tcp
            ports:
              - 22
              - 8443
              - 10050
              - 8080
              - 9000
            cidr_ip: 0.0.0.0/0
      register: ec2_group_result
    - name: Create the RHEL 7.4 VM of the aws master node
      ec2:
        region: sa-east-1
        group_id: '{{ec2_group_result.group_id}}'
        vpc_subnet_id: subnet-5f98d338
        instance_type: t2.micro
        key_name: '{{ ec2_key_result.key.name}}'
        image: ami-b0b7e3dc
        instance_tags:
          Name: aws-master
        assign_public_ip: yes
        wait: true
      register: ec2_result
    - name: Allocate a new elastic IP and associate it with the aws master node
      ec2_eip:
        region: sa-east-1
        device_id: '{{ec2_result.instance_ids[0]}}'
      register: ec2_eip_result
    - name: Generate the Ansible playbook for terminating the aws master node instance
      template:
        src: destroy-vm-master_template.yml
        dest: ./destroy-vm-master.yml
      vars:
        instance_ids: '{{ec2_result.instance_ids[0]}}'
        master_public_ip: '{{ec2_eip_result.public_ip}}'
        group_id: '{{ec2_group_result.group_id}}'
        awsKey_name: '{{ ec2_key_result.key.name }}'
        master_hostname: 'ip-{{ec2_result.instances[0].private_ip|regex_replace("\.", "-")}}'
    - name: Save Ansible inventory
      template:
        src: hosts_template
        dest: ./hosts
      vars:
        master_public_ip1: '{{ec2_eip_result.public_ip}}'
        master_public_ip2: '{{ec2_eip_result.public_ip|regex_replace("\.", "-")}}'
        master_private_ip: '{{ec2_result.instances[0].private_ip}}'
        awsKey_name: '{{ ec2_key_result.key.name }}'
    - name: Wait for SSH to come up
      wait_for:
        host: '{{ec2_eip_result.public_ip}}'
        port: 22
        state: started
    - name: Add the master host to the ansible-playbook in-memory inventory
      add_host:
        name: '{{ec2_eip_result.public_ip}}'
        groups: masters
        ansible_user: ec2-user
        ansible_ssh_private_key_file: ~/.ssh/{{ ec2_key_result.key.private_key }}.pem
        ansible_ssh_extra_args: "-o StrictHostKeyChecking=no"
